{"title":"Owned contract modificator","fileName":"common/Modify.sol","name":"Modify","abi":[{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"hammer","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"run","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_hammer","type":"address"}],"name":"setHammer","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"target","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"inputs":[{"name":"_target","type":"address"}],"payable":false,"type":"constructor"}],"bin":"","opcodes":"","source":"pragma solidity ^0.4.4;\nimport './Object.sol';\n\n/**\n * @title Owned contract modificator\n * @dev   It's abstract contract is a way to make some actions with `Owned` contract delayed.\n *        The use case typically have three steps:\n *          - create modify contract with owned target\n *          - (optional) setup `Modify` contract\n *          - delegate owned contract to `Modify` and `run()` modification\n */\ncontract Modify is Object {\n    Owned public target;\n\n    /**\n     * @dev Contract constructor\n     * @param _target is a owned target of modification\n     */\n    function Modify(Owned _target)\n    { target = _target; }\n\n    /**\n     * @dev Modification runner\n     * @notice the `target` should be delegated to this first\n     */\n    function run() onlyOwner {\n        if (target.owner() != address(this)) throw;\n\n        modify();\n        target.setOwner(msg.sender);\n    }\n\n    function modify() internal;\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_owner","type":"address","description":"New owner address "}],"name":"setOwner","outputs":[],"payable":false,"type":"function","details":"Delegate contract to another person","signature":"setOwner(address)","signatureHash":"13af4035"},{"constant":true,"inputs":[],"name":"hammer","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","signature":"hammer()","signatureHash":"457f4d41"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"type":"function","details":"Destroy contract and scrub a data","notice":"Only hammer can call it ","signature":"destroy()","signatureHash":"83197ef0"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":false,"inputs":[],"name":"run","outputs":[],"payable":false,"type":"function","details":"Modification runner","notice":"the `target` should be delegated to this first","signature":"run()","signatureHash":"c0406226"},{"constant":false,"inputs":[{"name":"_hammer","type":"address","description":"New hammer address"}],"name":"setHammer","outputs":[],"payable":false,"type":"function","details":"Hammer setter","signature":"setHammer(address)","signatureHash":"d31fdffd"},{"constant":true,"inputs":[],"name":"target","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","signature":"target()","signatureHash":"d4b83992"},{"inputs":[{"name":"_target","type":"address"}],"payable":false,"type":"constructor"}]}

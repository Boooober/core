{"title":"The constant market rule, return constant emission value for every deal","fileName":"market/MarketRuleConstant.sol","name":"MarketRuleConstant","abi":[{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"hammer","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"emission","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_hammer","type":"address"}],"name":"setHammer","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_deal","type":"address"}],"name":"getEmission","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"inputs":[{"name":"_emission","type":"uint256"}],"payable":false,"type":"constructor"}],"bin":"6060604052341561000c57fe5b604051602080610525833981016040528080519060200190919050505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b806002819055505b505b61045f806100c66000396000f30060606040523615610081576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af403514610083578063457f4d41146100b9578063827c049e1461010b57806383197ef0146101315780638da5cb5b14610143578063d31fdffd14610195578063fbb2ef67146101cb575bfe5b341561008b57fe5b6100b7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610215565b005b34156100c157fe5b6100c96102b8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561011357fe5b61011b6102de565b6040518082815260200191505060405180910390f35b341561013957fe5b6101416102e4565b005b341561014b57fe5b61015361035d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561019d57fe5b6101c9600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610383565b005b34156101d357fe5b6101ff600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610426565b6040518082815260200191505060405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102725760006000fd5b80600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103415760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103e05760006000fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b600060025490505b9190505600a165627a7a723058200706c3bc02f9aed4497006ccda8239d22aca40c163280ab1392626aa41b0a4fa0029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xC JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x525 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP JUMPDEST JUMPDEST CALLER PUSH1 0x0 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x45F DUP1 PUSH2 0xC6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x457F4D41 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x827C049E EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xD31FDFFD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xFBB2EF67 EQ PUSH2 0x1CB JUMPI JUMPDEST INVALID JUMPDEST CALLVALUE ISZERO PUSH2 0x8B JUMPI INVALID JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xC1 JUMPI INVALID JUMPDEST PUSH2 0xC9 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x113 JUMPI INVALID JUMPDEST PUSH2 0x11B PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x139 JUMPI INVALID JUMPDEST PUSH2 0x141 PUSH2 0x2E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x14B JUMPI INVALID JUMPDEST PUSH2 0x153 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x19D JUMPI INVALID JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x383 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1D3 JUMPI INVALID JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 SHA3 SMOD MOD 0xc3 0xbc MUL 0xf9 0xae 0xd4 0x49 PUSH17 0x6CCDA8239D22ACA40C163280AB1392626 0xaa COINBASE 0xb0 LOG4 0xfa STOP 0x29 ","source":"pragma solidity ^0.4.4;\nimport './MarketRule.sol';\nimport 'common/Object.sol';\n\n/**\n * @title The constant market rule, return constant emission value for every deal\n */\ncontract MarketRuleConstant is Object, MarketRule {\n    uint public emission;\n\n    function MarketRuleConstant(uint _emission)\n    { emission = _emission; }\n\n    /**\n     * @dev How amount of token emission needed when given lot is deal\n     * @param _deal lot address\n     * @return count of emission token value\n     */\n    function getEmission(Lot _deal) returns (uint)\n    { return emission; }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_owner","type":"address","description":"New owner address "}],"name":"setOwner","outputs":[],"payable":false,"type":"function","details":"Delegate contract to another person","signature":"setOwner(address)","signatureHash":"13af4035"},{"constant":true,"inputs":[],"name":"hammer","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","signature":"hammer()","signatureHash":"457f4d41"},{"constant":true,"inputs":[],"name":"emission","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function","signature":"emission()","signatureHash":"827c049e"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"type":"function","details":"Destroy contract and scrub a data","notice":"Only hammer can call it ","signature":"destroy()","signatureHash":"83197ef0"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":false,"inputs":[{"name":"_hammer","type":"address","description":"New hammer address"}],"name":"setHammer","outputs":[],"payable":false,"type":"function","details":"Hammer setter","signature":"setHammer(address)","signatureHash":"d31fdffd"},{"constant":false,"inputs":[{"name":"_deal","type":"address","description":"lot address"}],"name":"getEmission","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function","details":"How amount of token emission needed when given lot is deal","return":"count of emission token value","signature":"getEmission(address)","signatureHash":"fbb2ef67"},{"inputs":[{"name":"_emission","type":"uint256"}],"payable":false,"type":"constructor"}]}

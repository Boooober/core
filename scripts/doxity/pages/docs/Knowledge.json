{"fileName":"thesaurus/Knowledge.sol","name":"Knowledge","abi":[{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"hammer","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_to","type":"address"}],"name":"isEqual","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_hammer","type":"address"}],"name":"setHammer","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"knowledgeType","outputs":[{"name":"","type":"int256"}],"payable":false,"type":"function"},{"inputs":[{"name":"_type","type":"int8"}],"payable":false,"type":"constructor"}],"bin":"","opcodes":"","source":"pragma solidity ^0.4.4;\nimport 'common/Object.sol';\n\n/**\n * Knowledge is a generic declaration of object or process\n */\ncontract Knowledge is Object {\n    /* Knowledge can have a type described below */\n    int8 constant OBJECT  = 1;\n    int8 constant PROCESS = 2;\n\n    /* Knowledge type is a int value */\n    int public knowledgeType;\n\n    function Knowledge(int8 _type)\n    { knowledgeType = _type; }\n\n    /**\n     * Generic Knowledge comparation procedure\n     * @param _to compared knowledge address\n     * @return `true` when knowledges is equal\n     */\n    function isEqual(Knowledge _to) constant returns (bool);\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_owner","type":"address","description":"New owner address "}],"name":"setOwner","outputs":[],"payable":false,"type":"function","details":"Delegate contract to another person","signature":"setOwner(address)","signatureHash":"13af4035"},{"constant":true,"inputs":[],"name":"hammer","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","signature":"hammer()","signatureHash":"457f4d41"},{"constant":true,"inputs":[{"name":"_to","type":"address","description":"compared knowledge address"}],"name":"isEqual","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function","return":"`true` when knowledges is equal","notice":"Generic Knowledge comparation procedure","signature":"isEqual(address)","signatureHash":"5f3dab9b"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"type":"function","details":"Destroy contract and scrub a data","notice":"Only hammer can call it ","signature":"destroy()","signatureHash":"83197ef0"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":false,"inputs":[{"name":"_hammer","type":"address","description":"New hammer address"}],"name":"setHammer","outputs":[],"payable":false,"type":"function","details":"Hammer setter","signature":"setHammer(address)","signatureHash":"d31fdffd"},{"constant":true,"inputs":[],"name":"knowledgeType","outputs":[{"name":"","type":"int256"}],"payable":false,"type":"function","signature":"knowledgeType()","signatureHash":"f696d115"},{"inputs":[{"name":"_type","type":"int8"}],"payable":false,"type":"constructor"}]}
